{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Documents\\\\ate\\\\harena\\\\src\\\\pages\\\\seller\\\\editProduct.jsx\";\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport MultiImageInput from \"react-multiple-image-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handleError = e => console.log(e);\nconst [images, setImages] = useState({});\nconst crop = {\n  unit: \"%\",\n  aspect: 4 / 3,\n  width: \"100\"\n};\nconst onSubmit = async e => {\n  var imgUrl = [];\n  var formdata = new FormData();\n  const config = {\n    headers: {\n      \"X-Requested-With\": \"XMLHttpRequest\"\n    }\n  };\n  for (let i = 0; i < Object.keys(images).length; i++) {\n    var file = Object.values(images)[i];\n    formdata.append(\"image\", file);\n    let res = await axios.post(\"http://localhost:5000/sel/upload\", formdata, config);\n    console.log(res);\n  }\n};\nconst EditProduct = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(MultiImageInput, {\n        images: images,\n        setImages: setImages,\n        cropConfig: {\n          crop,\n          ruleOfThirds: true\n        },\n        max: 5,\n        allowCrop: false,\n        theme: \"light\",\n        handleError: handleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: classes.button,\n        value: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = EditProduct;\nexport default EditProduct;\nvar _c;\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"names":["React","useState","axios","MultiImageInput","handleError","e","console","log","images","setImages","crop","unit","aspect","width","onSubmit","imgUrl","formdata","FormData","config","headers","i","Object","keys","length","file","values","append","res","post","EditProduct","ruleOfThirds","classes","button"],"sources":["C:/Users/user/OneDrive/Documents/ate/harena/src/pages/seller/editProduct.jsx"],"sourcesContent":["import React,{useState} from 'react';\r\nimport axios from \"axios\";\r\nimport MultiImageInput from \"react-multiple-image-input\";\r\nconst handleError = (e) => console.log(e);\r\nconst [images, setImages] = useState({});\r\nconst crop = {\r\n    unit: \"%\",\r\n    aspect: 4 / 3,\r\n    width: \"100\"\r\n  };\r\nconst onSubmit = async (e) => {\r\n  var imgUrl = [];\r\n  var formdata = new FormData();\r\n  const config = {\r\n    headers: { \"X-Requested-With\": \"XMLHttpRequest\" }\r\n  };\r\n  for (let i = 0; i < Object.keys(images).length; i++) {\r\n    var file = Object.values(images)[i];\r\n    formdata.append(\"image\", file);\r\n\r\n let res = await axios.post(\r\n      \"http://localhost:5000/sel/upload\",\r\n      formdata,\r\n      config\r\n    );\r\n    console.log(res);\r\n  }\r\n};\r\nconst EditProduct = () => {\r\n    return ( \r\n        <>\r\n        <form onSubmit={onSubmit} encType=\"multipart/form-data\">\r\n          <MultiImageInput\r\n            images={images}\r\n            setImages={setImages}\r\n            cropConfig={{ crop, ruleOfThirds: true }}\r\n            max={5}\r\n            allowCrop={false}\r\n            theme=\"light\"\r\n            handleError={handleError}\r\n          />\r\n          <input type=\"submit\" className={classes.button} value=\"Post\" />\r\n        </form>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default EditProduct;"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,4BAA4B;AAAC;AAAA;AACzD,MAAMC,WAAW,GAAIC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;AACzC,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;AACxC,MAAMS,IAAI,GAAG;EACTC,IAAI,EAAE,GAAG;EACTC,MAAM,EAAE,CAAC,GAAG,CAAC;EACbC,KAAK,EAAE;AACT,CAAC;AACH,MAAMC,QAAQ,GAAG,MAAOT,CAAC,IAAK;EAC5B,IAAIU,MAAM,GAAG,EAAE;EACf,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC7B,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MAAE,kBAAkB,EAAE;IAAiB;EAClD,CAAC;EACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACd,MAAM,CAAC,CAACe,MAAM,EAAEH,CAAC,EAAE,EAAE;IACnD,IAAII,IAAI,GAAGH,MAAM,CAACI,MAAM,CAACjB,MAAM,CAAC,CAACY,CAAC,CAAC;IACnCJ,QAAQ,CAACU,MAAM,CAAC,OAAO,EAAEF,IAAI,CAAC;IAEjC,IAAIG,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CACrB,kCAAkC,EAClCZ,QAAQ,EACRE,MAAM,CACP;IACDZ,OAAO,CAACC,GAAG,CAACoB,GAAG,CAAC;EAClB;AACF,CAAC;AACD,MAAME,WAAW,GAAG,MAAM;EACtB,oBACI;IAAA,uBACA;MAAM,QAAQ,EAAEf,QAAS;MAAC,OAAO,EAAC,qBAAqB;MAAA,wBACrD,QAAC,eAAe;QACd,MAAM,EAAEN,MAAO;QACf,SAAS,EAAEC,SAAU;QACrB,UAAU,EAAE;UAAEC,IAAI;UAAEoB,YAAY,EAAE;QAAK,CAAE;QACzC,GAAG,EAAE,CAAE;QACP,SAAS,EAAE,KAAM;QACjB,KAAK,EAAC,OAAO;QACb,WAAW,EAAE1B;MAAY;QAAA;QAAA;QAAA;MAAA,QACzB,eACF;QAAO,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAE2B,OAAO,CAACC,MAAO;QAAC,KAAK,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAC1D,iBACJ;AAEX,CAAC;AAAA,KAjBKH,WAAW;AAmBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}